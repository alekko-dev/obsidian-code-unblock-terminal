import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";
import path from "path";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

// Plugin to copy pty-host.js to output directory
const copyPtyHostPlugin = {
	name: 'copy-pty-host',
	setup(build) {
		build.onEnd(() => {
			const source = 'src/terminal/pty-host.js';
			const dest = 'pty-host.js';
			try {
				fs.copyFileSync(source, dest);
				console.log(`Copied ${source} to ${dest}`);
			} catch (error) {
				console.error(`Failed to copy ${source}:`, error);
				throw error;
			}
		});
	}
};

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins,
		// Mark node-pty as external since it's a native module loaded via PTY host
		'node-pty',
	],
	format: 'cjs',
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
	minify: prod,
	platform: 'node',
	// Required for native modules
	mainFields: ['module', 'main'],
	conditions: ['node'],
	plugins: [copyPtyHostPlugin],
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
